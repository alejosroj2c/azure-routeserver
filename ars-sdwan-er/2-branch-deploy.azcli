#Parameters
rg=lab-ars-sdwan #Define your resource group
location=southcentralus #Set location
username=azureuser #Set username
password=Msft123Msft123 #Set password
virtualMachineSize=Standard_DS1_v2 #Set VM size

# Deploy BGP endpoont (Make the changes based on your needs)
vnetname=branch2 #Target NET
instances=1 #Set number of NVA instaces to be created
nvaintname=lxnva #NVA instance name
nvasubnet=nvasubnet #Existing Subnet where NVA gets deployed

#Specific NVA BGP settings
local_asn=65065 # Set ASN
rmt_asn=65005
bgp_network1="10.65.0.0/24"

# Create NVa VNET
az network vnet create --name $vnetname --resource-group $rg --location $location --address-prefix 10.64.0.0/24 --subnet-name $nvasubnet --subnet-prefix 10.64.0.0/28 --location $location -o none
# Create VM subnet
az network vnet subnet create --name vm-subnet --resource-group $rg --vnet-name $vnetname --address-prefix 10.64.0.48/28 -o none
# Assing nsg to the subnet
az network vnet subnet update -g $rg -n vm-subnet --vnet-name $vnetname  --network-security-group southcentralus-default-nsg -o none
# Create Ubuntu VM on vm-subnet 
az vm create -n $vnetname-vm1  -g $rg --image ubuntults --public-ip-sku Standard --size $virtualMachineSize -l $location --subnet vm-subnet --vnet-name $vnetname --admin-username $username --admin-password $password --nsg "" --no-wait --only-show-errors

# Deploy NVA instances on the target VNET above.
nvanames=$(i=1;while [ $i -le $instances ];do echo $vnetname-$nvaintname$i; ((i++));done)
for nvaname in $nvanames
do
 # Enable routing, NAT and BGP on Linux NVA:
 az network public-ip create --name $nvaname-pip --resource-group $rg --location $location --sku Standard --output none --only-show-errors
 az network nic create --name $nvaname-nic --resource-group $rg --subnet $nvasubnet --vnet $vnetname --public-ip-address $nvaname-pip --ip-forwarding true --location $location -o none
 az vm create --resource-group $rg --location $location --name $nvaname --size $virtualMachineSize --nics $nvaname-nic  --image UbuntuLTS --admin-username $username --admin-password $password -o none --only-show-errors
 
 #Enable boot diagnostics
 nvalocation=$(az vm show -n $nvaname -g $rg --query location -o tsv)
 az vm boot-diagnostics enable --name $nvaname -g $rg -o none

 #NVA BGP config variables (do not change)
 bgp_routerId=$(az network nic show --name $nvaname-nic --resource-group $rg --query ipConfigurations[0].privateIPAddress -o tsv)
 hubnva1_IP1=$(az network nic show --name az-hub-lxnva1VMNic --resource-group $rg --query ipConfigurations[0].privateIPAddress -o tsv)
 hubnva1_IP2=$(az network nic show --name az-hub-lxnva2VMNic --resource-group $rg --query ipConfigurations[0].privateIPAddress -o tsv)

 # Enable routing and NAT on Linux NVA:
 scripturi="https://raw.githubusercontent.com/dmauser/azure-routeserver/main/ars-sdwan-er/script/branch-ffr.sh"
 az vm extension set --resource-group $rg --vm-name $nvaname  --name customScript --publisher Microsoft.Azure.Extensions \
 --protected-settings "{\"fileUris\": [\"$scripturi\"],\"commandToExecute\": \"./branch-ffr.sh $local_asn $bgp_routerId $bgp_network1 $hubnva1_IP1 $hubnva1_IP2 $rmt_asn\"}" \
 --force-update \
 --no-wait
done

# add loop script to only continue when vm extenstion is fully completed
for nvaname in $nvanames
do
  while [ $(az vm extension list -g $rg --vm-name $nvaname --query "[?name=='customScript'].provisioningState" -o tsv) != "Succeeded" ]
  do
    echo "waiting for vm extension to complete"
    sleep 5
  done
done


# Assign nsg to nvasubnet
az network vnet subnet update -g $rg -n $nvasubnet --vnet-name $vnetname  --network-security-group southcentralus-default-nsg -o none

# Add UDP 500 and 4500 to the NSG
az network nsg rule create -g $rg --nsg-name southcentralus-default-nsg -n allow-udp500 --priority 100 --source-address-prefixes '*' --destination-address-prefixes '*' --destination-port-ranges 500 --direction Inbound --access Allow --protocol Udp -o none
az network nsg rule create -g $rg --nsg-name southcentralus-default-nsg -n allow-udp4500 --priority 101 --source-address-prefixes '*' --destination-address-prefixes '*' --destination-port-ranges 4500 --direction Inbound --access Allow --protocol Udp -o none

# Create UDR to 10.0.0.0/8 to point to NVA
# Get private ip of $vnetname-lxnva1
fs1nvaip=$(az network nic show --name $vnetname-lxnva1-nic --resource-group $rg --query ipConfigurations[0].privateIPAddress -o tsv)
az network route-table create -g $rg --name $vnetname-UDR -l $location -o none
az network route-table route create -g $rg --name $vnetname-UDR --route-table-name $vnetname-UDR --address-prefix 10.0.0.0/8 --next-hop-type VirtualAppliance --next-hop-ip-address $fs1nvaip -o none

# Associate to branch main subnet
az network vnet subnet update -g $rg -n vm-subnet --vnet-name $vnetname --route-table $vnetname-UDR -o none